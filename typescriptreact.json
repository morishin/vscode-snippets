{
	// Place your snippets for typescriptreact here. Each snippet is defined under a snippet name and has a prefix, body and
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
	// same ids are connected.
	// Example:
	"Print to console": {
		"prefix": "con",
		"body": [
			"console.log($1);",
		],
		"description": "Log output to console"
	},
	"React Native Component": {
  "prefix": "rnc",
  "body": [
    "import * as React from 'react';",
    "import { View } from 'react-native';",
    "",
    "interface Props {}",
    "",
    "interface State {}",
    "",
    "export default class ${TM_FILENAME_BASE} extends React.Component<Props, State> {",
    "  constructor(props: Props) {",
    "    super(props);",
    "",
    "    this.state = {};",
    "  }",
    "",
    "  async componentDidMount() {}",
    "",
    "  render() {",
    "    return (",
    "      <View />",
    "    );",
    "  }",
    "}",
    ""
  ],
  "description": "React Native Component"
},
	"React Native Screen Component": {
  "prefix": "rnsc",
  "body": [
    "import * as React from 'react';",
    "import { View } from 'react-native';",
    "import { NavigationScreenConfig } from 'react-navigation';",
    "",
    "interface Props {}",
    "",
    "interface State {}",
    "",
    "export default class ${TM_FILENAME_BASE} extends React.Component<Props, State> {",
    "  static routeName = '${1:${TM_FILEPATH}}';",
    "",
    "  static navigationOptions: NavigationScreenConfig<any> = {",
    "    title: '',",
    "  };",
    "",
    "  constructor(props: Props) {",
    "    super(props);",
    "",
    "    this.state = {};",
    "  }",
    "",
    "  async componentDidMount() {}",
    "",
    "  render() {",
    "    return (",
    "      <View />",
    "    );",
    "  }",
    "}",
    ""
  ],
  "description": "React Native Screen Component"
},
"React Native Stateless Functional Component": {
  "prefix": "rnsfc",
  "body": [
    "import * as React from 'react';",
    "import { View } from 'react-native';",
    "",
    "interface Props {}",
    "",
    "const ${TM_FILENAME_BASE} = (props: Props) => {",
    "  return (",
    "    <View>",
    "    </View>",
    "  );",
    "};",
    "",
    "export default ${TM_FILENAME_BASE};",
    ""
  ],
  "description": "React Native Stateless Functional Component"
}
}